c
@metrics.uniq
c
@competitors.collect{|c| c.metrics.collect{|x|x.name}}
c
@competitors.collect{|c| c.metrics.collect{|x|x.name}}
c
@competitors.collect{|c| c.metrics.collect{|x|x.name}}
@competitors.collect{|c| c.metrics.select{|x|x.name}}
@competitors.collect{|c| c.metrics.select name}
@competitors.collect{|c| c.metrics}
@competitors.metric
@competitors.metrics
c
(1.0/(repetitions.size() -1 ))
(1/(repetitions.size() -1 ))
x = repetitions.map{|s| (s.value - avg)**2}.sum * (1/(repetitions.size() -1 ))
x.to_f
x = repetitions.map{|s| (s.value - avg)**2}.sum * (1/(repetitions.size() -1 ))
x
x = Math.sqrt(repetitions.map{|s| (s.value - avg)**2}.sum * (1/(repetitions.size() -1 ))) 
repetitions.map{|s| (s.value - avg)**2}.sum * (1/(repetitions.size() -1 ))
repetitions.map{|s| (s.value - avg)**2}.sum * (1/(repetitions.size -1 ))
repetitions.map{|s| (s.value - avg)**2}.sum.to_f
repetitions.map{|s| (s.value - avg)**2}.sum
repetitions
dev
n
dev
n
dev
n
avg.to_f
avg
n
dev
repetitions.size
repetitions
c
dev
n
repetitions.size
n
repetitions.size
repetitions
c
user_session
current_user
c
names
n
c
vals
n
vals
values
names
c
!@product.recipes
if @product.recipes
@product.recipes
c
serie
serie[1]
data
c
data
n
c
cc
c
values
c
values
c
values
serie[1]
c
serie[1]
serie
c
serie[1]
serie.value
serie
c
data
c
values
data
c
values[serie][repetition]
n
values[serie][repetition]
values[serie]
n
c
e
n
exit
values[0][0]exit
values[0][0]
values[0]
values
analysis
c
exit
analysys_data_start
@sample.amount.to_f
c
@sample.amount.to_f
exit
metric
n
sheet
c
column
c
analysys_data_start
sheet.column(i+1)
sheet.coulmn(i+1)
@sample.amount.to_f
n
serie
@sample.amount.to_f
c
@sample.amount.to_f
n
@sample.amount.to_f
n
@sample.amount.to_f
n
@sample.amount.to_f
n
@sample.amount.to_f
n
@sample.amount.to_f
c
@sample.amount.to_f
n
@sample.amount.to_f
n
exit
column
@sample.amount.to_f
c
@sample.amount.to_f
c
@sample.amount.to_f
c
@sample.amount.to_f
c
@sample.amount.to_f
column
c
@sample.amount.to_f
@sample.amount
@sample
c
column
c
analysys_data_start
n
c
column
c
column
c
column
c
column
c
column
c
column
c
column
c
column
c
column
c
n
c
exit
sheet.column(i+1)[analysys_data_start,definition.repetitions]
sheet.column(i+1)[analysys_definition_start,definition.repetitions]
analysys_data_start+=sample_definition_rows_count
analysys_data_start
n
analysys_data_start
n
analysys_data_start
exit
column[i-1]
n
column[i-1]
exit
c
i
column[i]
column
c
sheet.column(3)
sheet.column(2)
sheet.column(1)
sheet.column(0)
sheet.colunm(0)
sheet.colun(1)
sheet.colun(0)
c
column
c
column
coulmn
c
cc
c
column
column[i]
c
column[i]
c
sheet.row(2)[2]
sheet.row(2)[1]
sheet.row(2)[0]
sheet.row(2)[3]
sheet.row(2)[2]
sheet.row(3)[i]
samples_count
c
n
sheet.row(2)[i]
sheet.row(2)
c
sheet.column(2)[4,definition.repetitions]
sheet.column(2)
sheet.column(i)
c
n
c
metric
c
spreadsheet.sheets
n
c
wb.sheets
sheet
sheet.name
c
sheet.row(8)
sheet.row(7)
sheet.row[7]
sheet.count
sheet.row.count()
sheet.row.size
sheet.rows.count
