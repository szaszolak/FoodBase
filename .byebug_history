c
exit
sheet.column(i+1)[analysys_data_start,definition.repetitions]
sheet.column(i+1)[analysys_definition_start,definition.repetitions]
analysys_data_start+=sample_definition_rows_count
analysys_data_start
n
analysys_data_start
n
analysys_data_start
exit
column[i-1]
n
column[i-1]
exit
c
i
column[i]
column
c
sheet.column(3)
sheet.column(2)
sheet.column(1)
sheet.column(0)
sheet.colunm(0)
sheet.colun(1)
sheet.colun(0)
c
column
c
column
coulmn
c
cc
c
column
column[i]
c
column[i]
c
sheet.row(2)[2]
sheet.row(2)[1]
sheet.row(2)[0]
sheet.row(2)[3]
sheet.row(2)[2]
sheet.row(3)[i]
samples_count
c
n
sheet.row(2)[i]
sheet.row(2)
c
sheet.column(2)[4,definition.repetitions]
sheet.column(2)
sheet.column(i)
c
n
c
metric
c
spreadsheet.sheets
n
c
wb.sheets
sheet
sheet.name
c
sheet.row(8)
sheet.row(7)
sheet.row[7]
sheet.count
sheet.row.count()
sheet.row.size
sheet.rows.count
sheet.row.count
n
c
n
spreadsheet.sheet(0)
spreadsheet.sheet
n
c
exception
n
c
sample
sample = @product.samples_with_metric(definition.metric_id).first
c
sample
sample = @product.samples_with_metric(definition.metric_id).first
sa
sa = @product.samples_with_metric(definition.metric_id).first
c
s
s = @product.samples_with_metric(definition.metric_id).first
@sample
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1).first.value.to_f
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1)
c
@product
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1)
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1).first.value.to_d
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1).first.value.to_i
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1).first.value.to_f
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1).first.value
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1).first
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1)
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1).value
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?",1,1)
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses.where("serie_id=? and repetition_id=?"1,1)
 @product.samples_with_metric(definition.metric_id).first.sensory_analyses
analysis.value.to_f
analysis.value
analysis
c
n
c
exception
n
params[:metric_id]
c
@definition
n
@productn
link_to product_experiment_definition(@product,experiment_definition)
@product
c
@definitions
c
@product.samples_with_metric(definition.metric_id).where("serie_id=? AND repetinion_id=?",serie,repetition)
@product.samples_with_metric(definition.metric_id)
c
sa.additive_id
sa.additiveid
sa.serie_id
sa = samples.first
samples.first.serie_id
samples
samples.where("serie_id=?",2).count
samples.where("serie_id=?",1).count
samples.where("serie_id=?",0).count
samples
samplse
c
samples
c
s.metric_id
s = samples.first
samples.first
samples
samples.where("serie_id=?",0).count
samples.where("serie_id=?",0)
c
n
samples
c
@definition
c
definition_params
c
definition_params
c
@product.id
@product
@product_id
params[:experiment_definition]
params[@product]
definition_params
c
definition_params
c
charts
@charts
n
metric.id.to_s
metric.id.to_S
metric.id
metric
c
avgs.map{|x|x[1]}.max.to_i
avgs.map{|x|x[1]}.max
avgs.first[1].to_i
avgs.first
avgs.max{|x|x[1]}[1].to_i
avgs.max{|x|x[1]}[1]
avgs.max{|x|x[1]}
avgs.max
line_chart.maximum_value.to_i
line_chart.minimum_value.to_i
n
c
avg[0]
avg[1].to_i
c
avg[1].to_i
avg[1]
avg[0]
avg
metric
c
metric
c
metric
c
metric
c
line_chart.maximum_value.to_i
line_chart.minimum_value.to_i
line_chart.minimum_value
line_chart.minimum_value8
line_chart.maximum_value
avgs.first[1]*0.8
avgs.first[1]*1.1
avgs.first[1]*0.8
avgs.first[1]
avgs.first
avgs(0)
avgs.first
avgs[1]
avgs
avgs[1]*0.8
avgs[0]*0.8
avgs
line_chart.minimum_value
line_chart.maximum_value
n
line_chart.minimum_value
line_chart.maximum_value
line_chart.data
avgs
metric
c
metric
c
metric
c
metric
c
metric
c
metric
c
metric
cmetric
c
line_chart.maximum_value
avgs
line_chart.maximum_value
n
c
avgs
line_chart.maximum_value
n
c
avgsa
line_chart.maximum_value
